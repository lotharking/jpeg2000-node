name: Quarkus Native Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Set up GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: '17'
        components: 'native-image'
        github-token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build with Maven (Native)
      run: |
        cd core
        mvn clean package -Pnative -Dquarkus.package.output-directory=
    
    - name: Create bin directory and copy artifacts
      run: |
        mkdir -p bin
        cp core/target/*-runner bin/
        cp -r core/target/lib bin/ || echo "No lib directory found"
        cp -r core/target/quarkus-app bin/ || echo "No quarkus-app directory found"
    
    - name: Clean up unnecessary files
      run: |
        rm -rf core/target/*.jar || true
        rm -rf core/target/*.original || true
        rm -rf core/target/classes || true
        rm -rf core/target/maven-* || true
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: quarkus-native-package
        path: bin/

  release:
    name: Release to NPM
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: quarkus-native-package
        path: bin/

    - name: Process Release Please
      uses: googleapis/release-please-action@v4
      id: release-please
      with:
        path: ./lib
        config-file: release-please-config.json
        manifest-file: .release-please-manifest.json
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Print release outputs for debugging
      continue-on-error: true
      run: |
        echo "Release outputs:"
        echo "${{ toJson(steps.release-please.outputs) }}"

    - name: Setup Node.js for NPM Publishing
      if: ${{ steps.release-please.outputs.release_created }}
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Publish to NPM
      if: ${{ steps.release-please.outputs.release_created }}
      run: |
        cd lib
        yarn install --immutable
        yarn npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
